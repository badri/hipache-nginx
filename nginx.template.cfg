# https://github.com/paasmaker/paasmaker/blob/master/paasmaker/router/router.py
# Also has custom logging for which backends where used, which I have removed here
# for now because they were based on redis key structures that were more complex than
# I desired.

worker_processes 1;
#error_log %(log_path)s/error.log %(log_level)s;
pid %(pid_path)s/nginx.pid;

error_log /dev/stdout %(log_level)s;
daemon off;

events {
    worker_connections  256;
}

http {
    access_log %(log_path)s/access.log combined;

    client_max_body_size 10M;

    # Map a HTTP Upgrade header, if supplied.
    # This is to enable websocket proxying.
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Shared dict for storing Redis SHA1s.
    lua_shared_dict redis 1m;

    server {
        listen       [::]:%(listen_port_80)s ipv6only=on;
        listen       %(listen_port_80)s;
        server_name  localhost;

        location / {
            set $redis_host %(redis_host)s;
            set $redis_port %(redis_port)s;
            set $upstream "";
            rewrite_by_lua_file %(router_root)s/rewrite.lua;

            proxy_set_header            Host $host;
            proxy_buffering             off;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header            X-Forwarded-Port 80;
            proxy_set_header            X-Forwarded-Host $host;
            proxy_redirect              off;
            proxy_connect_timeout       10;
            proxy_send_timeout          60;
            proxy_read_timeout          60;
            proxy_pass                  http://$upstream;

            # Websocket handling.
            proxy_set_header            Upgrade $http_upgrade;
            proxy_set_header            Connection $connection_upgrade;
        }
    }

    server {
        listen       [::]:%(listen_port_443)s ipv6only=on;
        listen       %(listen_port_443)s;
        server_name  localhost;

        location / {
            set $redis_host %(redis_host)s;
            set $redis_port %(redis_port)s;
            set $upstream "";
            rewrite_by_lua_file %(router_root)s/rewrite.lua;

            proxy_set_header            Host $host;
            proxy_buffering             off;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header            X-Forwarded-Port 443;
            proxy_set_header            X-Forwarded-Host $host;
            proxy_set_header            X-Forwarded-Proto https;
            proxy_redirect              off;
            proxy_connect_timeout       10;
            proxy_send_timeout          60;
            proxy_read_timeout          60;
            proxy_pass                  http://$upstream;

            # Websocket handling.
            proxy_set_header            Upgrade $http_upgrade;
            proxy_set_header            Connection $connection_upgrade;
        }
    }
}
